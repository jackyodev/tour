{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\tour\\\\src\\\\components\\\\plant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Loading } from \"./subComponents/loading.js\";\nimport axios from \"axios\";\nimport { plantHeaderMedia } from \"./subComponents/headerMedia.js\";\nimport \"../scss/plant.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction renderComp(props) {\n  if (props !== null) {\n    let {\n      photo_url,\n      common_name,\n      plant_species_name,\n      plant_desc\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plant\",\n      children: [plantHeaderMedia(photo_url), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plantName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: common_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"\",\n          children: plant_species_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pageDesc\",\n        children: plant_desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n}\n\nexport function Plant() {\n  _s();\n\n  const location = useLocation();\n  const useParams = new URLSearchParams(location.search);\n  const id = useParams.get(\"id\");\n  const [plantInfo, setPlantInfo] = useState(null);\n  useEffect(() => {\n    //https://dev.to/reenydavidson/settimeout-in-useeffect-api-call-data-fetching-j33\n    const fetchData = () => {\n      axios.get(`/api/plants/${id}`).then(res => {\n        setPlantInfo(res.data.data);\n      }).catch(err => console.log(err));\n    };\n\n    const timer = setTimeout(() => {\n      fetchData();\n    }, 1000); //the return callback is to cleanup the useEffect\n\n    return () => clearTimeout(timer);\n  }, [id]);\n  return renderComp(plantInfo);\n}\n\n_s(Plant, \"9FAZLHliyR5bJw03mnd05LHiUJI=\", false, function () {\n  return [useLocation];\n});\n\n_c = Plant;\nconst exported = {\n  Plant\n};\nexport default exported;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plant\");","map":{"version":3,"sources":["E:/Projects/tour/src/components/plant.js"],"names":["React","useEffect","useState","useLocation","Loading","axios","plantHeaderMedia","renderComp","props","photo_url","common_name","plant_species_name","plant_desc","Plant","location","useParams","URLSearchParams","search","id","get","plantInfo","setPlantInfo","fetchData","then","res","data","catch","err","console","log","timer","setTimeout","clearTimeout","exported"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAO,oBAAP;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,QAAI;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,WAAb;AAA0BC,MAAAA,kBAA1B;AAA8CC,MAAAA;AAA9C,QAA6DJ,KAAjE;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACGF,gBAAgB,CAACG,SAAD,CADnB,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,oBAAmBC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,EAAb;AAAA,oBAAiBC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,kBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAZD,MAYO;AACL,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;AAED,OAAO,SAASC,KAAT,GAAiB;AAAA;;AACtB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,SAAS,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAlB;AACA,QAAMC,EAAE,GAAGH,SAAS,CAACI,GAAV,CAAc,IAAd,CAAX;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMqB,SAAS,GAAG,MAAM;AACtBjB,MAAAA,KAAK,CACFc,GADH,CACQ,eAAcD,EAAG,EADzB,EAEGK,IAFH,CAESC,GAAD,IAAS;AACbH,QAAAA,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAZ;AACD,OAJH,EAKGC,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,KAPD;;AASA,UAAMG,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BT,MAAAA,SAAS;AACV,KAFuB,EAErB,IAFqB,CAAxB,CAXc,CAed;;AACA,WAAO,MAAMU,YAAY,CAACF,KAAD,CAAzB;AACD,GAjBQ,EAiBN,CAACZ,EAAD,CAjBM,CAAT;AAmBA,SAAOX,UAAU,CAACa,SAAD,CAAjB;AACD;;GA1BeP,K;UACGV,W;;;KADHU,K;AA4BhB,MAAMoB,QAAQ,GAAG;AAAEpB,EAAAA;AAAF,CAAjB;AACA,eAAeoB,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Loading } from \"./subComponents/loading.js\";\r\nimport axios from \"axios\";\r\n\r\nimport { plantHeaderMedia } from \"./subComponents/headerMedia.js\";\r\nimport \"../scss/plant.scss\";\r\n\r\nfunction renderComp(props) {\r\n  if (props !== null) {\r\n    let { photo_url, common_name, plant_species_name, plant_desc } = props;\r\n    return (\r\n      <div className=\"plant\">\r\n        {plantHeaderMedia(photo_url)}\r\n        <div className=\"plantName\">\r\n          <div className=\"\">{common_name}</div>\r\n          <i className=\"\">{plant_species_name}</i>\r\n        </div>\r\n        <p className=\"pageDesc\">{plant_desc}</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Loading />;\r\n  }\r\n}\r\n\r\nexport function Plant() {\r\n  const location = useLocation();\r\n  const useParams = new URLSearchParams(location.search);\r\n  const id = useParams.get(\"id\");\r\n  const [plantInfo, setPlantInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //https://dev.to/reenydavidson/settimeout-in-useeffect-api-call-data-fetching-j33\r\n    const fetchData = () => {\r\n      axios\r\n        .get(`/api/plants/${id}`)\r\n        .then((res) => {\r\n          setPlantInfo(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n\r\n    const timer = setTimeout(() => {\r\n      fetchData();\r\n    }, 1000);\r\n\r\n    //the return callback is to cleanup the useEffect\r\n    return () => clearTimeout(timer);\r\n  }, [id])\r\n\r\n  return renderComp(plantInfo);\r\n}\r\n\r\nconst exported = { Plant };\r\nexport default exported;\r\n"]},"metadata":{},"sourceType":"module"}